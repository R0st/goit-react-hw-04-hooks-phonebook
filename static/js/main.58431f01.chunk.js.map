{"version":3,"sources":["component/ContactForm/ContactForm.js","component/ContactList/ContactList.js","component/Filter/Filter.js","App.js","index.js","component/ContactForm/ContactForm.module.css","component/ContactList/ContactList.module.css"],"names":["ContactForm","state","number","name","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","style","this","ContactLabel","htmlFor","ContactInput","type","pattern","title","required","id","onChange","ContactBtn","Component","ContactList","contacts","onDeleteContact","ContactListUl","map","ContactListLi","ContactBtnDel","onClick","Filter","App","filter","changeFilter","addContact","contact","includes","alert","handleNameChange","event","getFilteredContacts","normalizedFilter","toLowerCase","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","constacts","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.58431f01.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport style from './ContactForm.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {   \r\n\r\n     static propTypes = {\r\n        name: PropTypes.string,\r\n        number: PropTypes.number,\r\n    };\r\n      \r\n    state = {\r\n        number: \"\",\r\n        name: \"\",\r\n    }\r\n\r\n    nameInputId = uuidv4();\r\n    numberInputId = uuidv4();\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.name, this.state.number)\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({name: \"\", number: \"\"})\r\n    }\r\n    render() {\r\n        return (\r\n            <form className={style.ContactForm} onSubmit={this.handleSubmit}>\r\n                <label className={style.ContactLabel} htmlFor={this.nameInputId}>\r\n                    Имя\r\n                    <input\r\n                        className={style.ContactInput}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"required\r\n                        // required\r\n                        id={this.nameInputId}\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n                <label htmlFor={this.numberInputId} className={style.ContactLabel}>\r\n                    Номер\r\n                    <input\r\n                        className={style.ContactInput}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        value={this.state.number}\r\n                        onChange={this.handleChange}\r\n                        id={this.numberInputId}/>\r\n                </label>\r\n\r\n                <button \r\n                    className={style.ContactBtn}\r\n                    type=\"submit\">Add contact</button>\r\n            </form>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default ContactForm;","import React from 'react'\r\nimport style from './ContactList.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n    <ul className={style.ContactListUl}>\r\n        {contacts.map(({ id, name, number }) => (\r\n            <li className={style.ContactListLi} key={id}>\r\n                <p>{name}: \r\n                    <span>{number}</span>\r\n                </p> \r\n                <button \r\n                    className={style.ContactBtnDel}\r\n                    onClick={()=>onDeleteContact(id)}>Delete</button>  \r\n            </li>\r\n        ))}\r\n    </ul>\r\n)\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    \r\n    <label>\r\n          Find contacts by name\r\n          <input \r\n            type=\"text\" \r\n            value={value}\r\n            onChange={onChange}/>\r\n        </label>\r\n)\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './component/ContactForm/ContactForm';\nimport ContactList from './component/ContactList';\nimport Filter from './component/Filter/Filter';\n\nclass App extends Component {\n  state = {\n  contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ],\n  filter: '',\n}\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    \n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.constacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }  \n  \n  changeFilter = e => {\n    this.setState({filter: e.currentTarget.value});\n}\n  \n  addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\nif (!this.state.contacts.map(contact => contact.name).includes(name)) {\n\n    this.setState(({contacts}) => ({\n      contacts: [contact, ...contacts],\n    }));\n  }\n  else {\n      alert(`${name} is already in contacs.`)\n    }\n  };\n  \n  handleNameChange = event => {\n    this.setState({name: event.currentTarget.value})\n  }\n\n  // formSubmitHandler = data => {\n  //   console.log(data);\n  // }\n\n  getFilteredContacts = () => {\n    const {filter, contacts} = this.state;\n    const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  }\n\n  deleteContact = contactId => {\n    this.setState(prevState=> ({\n      contacts: prevState.contacts.filter(contact=>contact.id !==contactId)\n    }))\n  }\n  \n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n        <>\n        <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.addContact} />\n          <h2>Contacts</h2>\n          <ContactList contacts={filteredContacts} onDeleteContact={this.deleteContact}/>\n          <Filter value={filter} onChange={this.changeFilter}/>\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__3iuaB\",\"ContactLabel\":\"ContactForm_ContactLabel__26OHx\",\"ContactInput\":\"ContactForm_ContactInput__3jUZg\",\"ContactBtn\":\"ContactForm_ContactBtn__2uL_g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactListLi\":\"ContactList_ContactListLi__1mx1c\",\"ContactBtnDel\":\"ContactList_ContactBtnDel__3qp9N\"};"],"sourceRoot":""}